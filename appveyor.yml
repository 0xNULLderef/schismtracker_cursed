environment:
    matrix:
    - platform: x86
      arch: i686
      mingw: mingw32
      msys: msys32
    - platform: x64
      arch: x86_64
      mingw: mingw64
      msys: msys64

cache:
  - 'C:\msys32'

install:
  - ps: |
      [Environment]::SetEnvironmentVariable("MSYS2_PATH_TYPE", "inherit", "Machine")
      $platform = $env:Platform
      $arch = $env:Arch
      $msys = $env:Msys
      $mingw = $env:Mingw
      $folder = $env:APPVEYOR_BUILD_FOLDER

      $env:PATH="C:\$msys\$mingw\bin;C:\$msys\usr\bin;$env:PATH"

      function bash($command, $dieOnError = $true) {
        ""

        Write-Host $command

        $folder = $folder -Replace '\\', '/'

        $mingwUpper = $mingw.ToUpper()
        & "C:\$msys\usr\bin\sh.exe" --login -c "MSYSTEM=$mingwUpper . /etc/profile && cd $folder && $command"

        if ($LASTEXITCODE -eq 0) {
          Write-Host "'$command' succeeded. While its output might be red, it exited with '0'." -ForegroundColor Green
        } else {
          Write-Host "'$command' failed with exit code $LASTEXITCODE! " -ForegroundColor Red -NoNewline

          if ($dieOnError) {
            Write-Host "Exiting." -ForegroundColor Red
            exit $LASTEXITCODE
          } else {
            "Continuing."
          }
        }
      }

      # 32-bit MSYS2 is not offered on AppVeyor yet, so we need to install it.
      if ($platform -eq "x86") {
        Write-Host "Installing 32-bit MSYS2..." -ForegroundColor Cyan

        # download installer
        $zipPath = "$($env:USERPROFILE)\msys2-i686-latest.tar.xz"
        $tarPath = "$($env:USERPROFILE)\msys2-i686-latest.tar"

        "Downloading MSYS2 installation package..."
        (New-Object Net.WebClient).DownloadFile('http://repo.msys2.org/distrib/msys2-i686-latest.tar.xz', $zipPath)

        Write-Host "Unzipping $zipPath..."
        7z x $zipPath -y -o"$env:USERPROFILE" | Out-Null

        Write-Host "Untaring $tarPath to C:\msys32\..."
        7z x $tarPath -y -oC:\ | Out-Null
        del $zipPath
        del $tarPath

        Write-Host "32-bit MSYS2 installed" -ForegroundColor Green

        bash "pacman --sync --noconfirm --needed pacman pacman-mirrors"
        bash "pacman --sync --noconfirm --needed VCS"
        bash "pacman --sync --noconfirm --needed base-devel"
        bash "pacman --sync --noconfirm --needed msys2-devel"
        bash "pacman --sync --noconfirm --needed mingw-w64-$arch-toolchain"
      }

      bash "pacman --sync --noconfirm --needed mingw-w64-$arch-SDL"

build_script:
  - ps: |
      bash "autoreconf --install --include=/$mingw/share/aclocal/"
      bash "./configure"
      bash "make"

on_failure:
  - ps: |
      bash "ls -la"
      bash "if [ -e config.log ]; then echo ''; echo 'Contents of config.log:'; cat config.log; else echo '`"config.log`" not found.'; fi;"
      bash "if [ -e configure.ac ]; then echo ''; echo 'Contents of configure.ac:'; cat configure.ac; else echo '`"configure.ac`" not found.'; fi;"
      bash "if [ -e configure ]; then echo ''; echo 'Contents of configure:'; cat configure; else echo '`"configure`" not found.'; fi;"
      bash "if [ -e /$mingw/bin/sdl-config ]; then echo ''; echo 'Contents of $/mingw/bin/sdl-config:'; cat /$mingw/bin/sdl-config; else echo '`"/$mingw/bin/sdl-config`" not found.'; fi;"

notifications:
  on_build_success: false
  on_build_failure: false
  on_build_status_changed: true